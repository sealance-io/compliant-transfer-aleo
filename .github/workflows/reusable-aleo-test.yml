name: Reusable Aleo Test

on:
  workflow_call:
    inputs:
      test_command:
        required: true
        type: string
        description: "The test command to run"
      watched_paths:
        required: true
        type: string
        description: "Comma-separated list of paths to watch for changes"
      job_name:
        required: true
        type: string
        description: "Name of the job displayed in GitHub UI"

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for comparing commits
      
      - name: Check if paths changed
        id: check
        run: |
          # If workflow dispatch, always run
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Get changed files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          
          # Check if any watched paths were changed
          SHOULD_RUN=false
          IFS=',' read -ra PATHS <<< "${{ inputs.watched_paths }}"
          for path in "${PATHS[@]}"; do
            if echo "$CHANGED_FILES" | grep -q "$path"; then
              SHOULD_RUN=true
              echo "Path '$path' was modified, triggering test"
              break
            fi
          done
          
          echo "should_run=$SHOULD_RUN" >> $GITHUB_OUTPUT

  run-test:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.should_run == 'true' }}
    name: ${{ inputs.job_name }}
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      packages: 'read'
    timeout-minutes: 180
    container:
      image: ghcr.io/sealance-io/leo-lang-ci:v2.4.1-fixed
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
      options: --cpus 2 --add-host=host.docker.internal:host-gateway
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - uses: actions/checkout@v4
      - name: Setup doko-js-cli
        uses: ./.github/actions/setup-doko-js
        with:
          doko-repo: 'NadavPeled1998/doko-js'
          doko-branch: 'fix/array_type_conversion'
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - run: cp .env.example .env

      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit
      
      - name: Compile leo
        run: npm run compile

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run test
        run: ${{ inputs.test_command }}
        env:
          DOCKER_HOST: "unix:///var/run/docker.sock"
          TESTCONTAINERS_RYUK_DISABLED: true
          TESTNET_ENDPOINT: "http://host.docker.internal:3030"